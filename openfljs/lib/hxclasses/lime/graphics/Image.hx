package lime.graphics;

@:allow(lime.graphics.util.ImageCanvasUtil) @:allow(lime.graphics.util.ImageDataUtil) @:access(lime.app.Application) @:access(lime.math.ColorMatrix) @:access(lime.math.Rectangle) @:access(lime.math.Vector2) @:autoBuild(lime.Assets.embedImage()) extern class Image {
	var buffer : ImageBuffer;
	var data(get,set) : lime.utils.UInt8Array;
	var dirty : Bool;
	var format(get,set) : PixelFormat;
	var height : Int;
	var offsetX : Int;
	var offsetY : Int;
	var powerOfTwo(get,set) : Bool;
	var premultiplied(get,set) : Bool;
	var rect(get,null) : lime.math.Rectangle;
	var src(get,set) : Dynamic;
	var transparent(get,set) : Bool;
	var type : ImageType;
	var width : Int;
	var x : Float;
	var y : Float;
	function new(?buffer : ImageBuffer, offsetX : Int = 0, offsetY : Int = 0, width : Int = 0, height : Int = 0, color : Null<Int> = 0, ?type : ImageType) : Void;
	function clone() : Image;
	function colorTransform(rect : lime.math.Rectangle, colorMatrix : lime.math.ColorMatrix) : Void;
	function copyChannel(sourceImage : Image, sourceRect : lime.math.Rectangle, destPoint : lime.math.Vector2, sourceChannel : ImageChannel, destChannel : ImageChannel) : Void;
	function copyPixels(sourceImage : Image, sourceRect : lime.math.Rectangle, destPoint : lime.math.Vector2, ?alphaImage : Image, ?alphaPoint : lime.math.Vector2, mergeAlpha : Bool = false) : Void;
	function encode(?format : String, quality : Int = 0) : lime.utils.ByteArray;
	function fillRect(rect : lime.math.Rectangle, color : Int, format : Null<PixelFormat> = null) : Void;
	function floodFill(x : Int, y : Int, color : Int, format : Null<PixelFormat> = null) : Void;
	function getColorBoundsRect(mask : Int, color : Int, findColor : Bool = false, format : Null<PixelFormat> = null) : lime.math.Rectangle;
	function getPixel(x : Int, y : Int, format : Null<PixelFormat> = null) : Int;
	function getPixel32(x : Int, y : Int, format : Null<PixelFormat> = null) : Int;
	function getPixels(rect : lime.math.Rectangle, format : Null<PixelFormat> = null) : lime.utils.ByteArray;
	function merge(sourceImage : Image, sourceRect : lime.math.Rectangle, destPoint : lime.math.Vector2, redMultiplier : Int, greenMultiplier : Int, blueMultiplier : Int, alphaMultiplier : Int) : Void;
	function resize(newWidth : Int, newHeight : Int) : Void;
	function scroll(x : Int, y : Int) : Void;
	function setPixel(x : Int, y : Int, color : Int, format : Null<PixelFormat> = null) : Void;
	function setPixel32(x : Int, y : Int, color : Int, format : Null<PixelFormat> = null) : Void;
	function setPixels(rect : lime.math.Rectangle, byteArray : lime.utils.ByteArray, format : Null<PixelFormat> = null) : Void;
	static function fromBase64(base64 : String, type : String, onload : Image -> Void) : Image;
	static function fromBitmapData(bitmapData : Dynamic) : Image;
	static function fromBytes(bytes : lime.utils.ByteArray, onload : Null<Image -> Void> = null) : Image;
	static function fromCanvas(canvas : js.html.CanvasElement) : Image;
	static function fromFile(path : String, onload : Null<Image -> Void> = null, onerror : Null<Void -> Void> = null) : Image;
	static function fromImageElement(image : js.html.ImageElement) : Image;
}
