package openfl.ui;

extern class Keyboard {
	static var A(inline,never) : Int;
	static var ALTERNATE(inline,never) : Int;
	static var B(inline,never) : Int;
	static var BACKQUOTE(inline,never) : Int;
	static var BACKSLASH(inline,never) : Int;
	static var BACKSPACE(inline,never) : Int;
	static var BREAK(inline,never) : Int;
	static var C(inline,never) : Int;
	static var CAPS_LOCK(inline,never) : Int;
	static var COMMA(inline,never) : Int;
	static var COMMAND(inline,never) : Int;
	static var CONTROL(inline,never) : Int;
	static var D(inline,never) : Int;
	static var DELETE(inline,never) : Int;
	static var DOWN(inline,never) : Int;
	static var E(inline,never) : Int;
	static var END(inline,never) : Int;
	static var ENTER(inline,never) : Int;
	static var EQUAL(inline,never) : Int;
	static var ESCAPE(inline,never) : Int;
	static var F(inline,never) : Int;
	static var F1(inline,never) : Int;
	static var F10(inline,never) : Int;
	static var F11(inline,never) : Int;
	static var F12(inline,never) : Int;
	static var F13(inline,never) : Int;
	static var F14(inline,never) : Int;
	static var F15(inline,never) : Int;
	static var F2(inline,never) : Int;
	static var F3(inline,never) : Int;
	static var F4(inline,never) : Int;
	static var F5(inline,never) : Int;
	static var F6(inline,never) : Int;
	static var F7(inline,never) : Int;
	static var F8(inline,never) : Int;
	static var F9(inline,never) : Int;
	static var G(inline,never) : Int;
	static var H(inline,never) : Int;
	static var HOME(inline,never) : Int;
	static var I(inline,never) : Int;
	static var INSERT(inline,never) : Int;
	static var J(inline,never) : Int;
	static var K(inline,never) : Int;
	static var L(inline,never) : Int;
	static var LEFT(inline,never) : Int;
	static var LEFTBRACKET(inline,never) : Int;
	static var M(inline,never) : Int;
	static var MINUS(inline,never) : Int;
	static var N(inline,never) : Int;
	static var NUMBER_0(inline,never) : Int;
	static var NUMBER_1(inline,never) : Int;
	static var NUMBER_2(inline,never) : Int;
	static var NUMBER_3(inline,never) : Int;
	static var NUMBER_4(inline,never) : Int;
	static var NUMBER_5(inline,never) : Int;
	static var NUMBER_6(inline,never) : Int;
	static var NUMBER_7(inline,never) : Int;
	static var NUMBER_8(inline,never) : Int;
	static var NUMBER_9(inline,never) : Int;
	static var NUMLOCK(inline,never) : Int;
	static var NUMPAD(inline,never) : Int;
	static var NUMPAD_0(inline,never) : Int;
	static var NUMPAD_1(inline,never) : Int;
	static var NUMPAD_2(inline,never) : Int;
	static var NUMPAD_3(inline,never) : Int;
	static var NUMPAD_4(inline,never) : Int;
	static var NUMPAD_5(inline,never) : Int;
	static var NUMPAD_6(inline,never) : Int;
	static var NUMPAD_7(inline,never) : Int;
	static var NUMPAD_8(inline,never) : Int;
	static var NUMPAD_9(inline,never) : Int;
	static var NUMPAD_ADD(inline,never) : Int;
	static var NUMPAD_DECIMAL(inline,never) : Int;
	static var NUMPAD_DIVIDE(inline,never) : Int;
	static var NUMPAD_ENTER(inline,never) : Int;
	static var NUMPAD_MULTIPLY(inline,never) : Int;
	static var NUMPAD_SUBTRACT(inline,never) : Int;
	static var O(inline,never) : Int;
	static var P(inline,never) : Int;
	static var PAGE_DOWN(inline,never) : Int;
	static var PAGE_UP(inline,never) : Int;
	static var PERIOD(inline,never) : Int;
	static var Q(inline,never) : Int;
	static var QUOTE(inline,never) : Int;
	static var R(inline,never) : Int;
	static var RIGHT(inline,never) : Int;
	static var RIGHTBRACKET(inline,never) : Int;
	static var S(inline,never) : Int;
	static var SEMICOLON(inline,never) : Int;
	static var SHIFT(inline,never) : Int;
	static var SLASH(inline,never) : Int;
	static var SPACE(inline,never) : Int;
	static var T(inline,never) : Int;
	static var TAB(inline,never) : Int;
	static var U(inline,never) : Int;
	static var UP(inline,never) : Int;
	static var V(inline,never) : Int;
	static var W(inline,never) : Int;
	static var X(inline,never) : Int;
	static var Y(inline,never) : Int;
	static var Z(inline,never) : Int;
	static var capsLock(default,null) : Bool;
	static var numLock(default,null) : Bool;
	static function isAccessible() : Bool;
}
